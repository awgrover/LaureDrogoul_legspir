#TRIG 1,0,0
#TRIG 2,0,0
#TRIG 3,0,0
#TRIG 4,2,0
#RAND 4
#TRIG 5,0,0
#TRIG 18,5,0

We are using the serial protocol, so the rules about trigger-pins don't apply.
The "trigger" command in the serial protocol is really "play track n", and doesn't relate to the trigger pins, nor to the config in this file.

Make sound files name 001something.mp3, 002something.mp3, etc.

For example, we have 3 movement zones, so you need to have 3 sounds:
001interested.mp3, 002excited.mp3, 003goodbye.mp3
(the name can be anything as long as the start with 001, 002, etc.)

You could have more than one sound for each of the zones, they'll be played randomly. You'd have to specify the number of sounds per zone in the pir_legs.ino file, at MovementSoundCounts. For example, if you want 1 "interested" sound, 3 excited sounds, and 2 goodbyes, change MovementSoundCounts:
    const int MovementSoundCounts[] = {1,3,2,0};
And you'll need the sound files:
    001interested.mp3, 
    002excited.mp3, 003excited.mp3, 004excited.mp3, 
    005goodbye.mp3

You'll also need some idle sounds. The number of idle sounds is in the pir_legs.ino file, IdleSoundCount.
The first "idle" sound file starts at 2 more than the "goodbye" sound.
    if 003goodbye.mp3, then
        005idle1sound.mp3
    if 005goodbye.mp3, then
        007idle1sound.mp3
And then the rest of the idle sounds (IdleSoundCount of them). I put the "gap" in to make it easier to see where the idle sounds start. If you give them names with a hint, that helps too!

If the zones all had 1 sound, and IdleSoundCount is 3, then it would look like:
    001interested.mp3
    002excited.mp3
    003goodbye.mp3
    <gap>
    005goodbye.mp3
    006goodbye.mp3
    007goodbye.mp3

If the zones had 1,3,2 sounds (like above), and IdleSoundCount is 3, then it would look like:
    001interested.mp3, 
    002excited.mp3, 003excited.mp3, 004excited.mp3, 
    005goodbye.mp3
    <gap>
    007goodbye.mp3, 008goodbye.mp3, 009goodbye.mp3

Remember, only the first three digits matter, you can make the rest of the file name descriptive. Extra files are ignored.


Leave the below for reference:

1..3 are sounds for the various movement cases. I.e. explicitly triggered.
    Hold to loop.
    Release continues to play to end, another trigger interrupts.
    (Unused triggers stop)
4 Set to randomly play 5...
    Hold it low to keep playing from the random set (5...)
5... Won't explicilty trigger 5..., they are the rand/idle sounds
18 is for "stop" if we need it.
The on-board rocker will stop even if a trigger is held low (have to up/down to go again)

TRIG N, F, L
    N=number 1-18
    F= 0=>normal, 1=>next, 2=>Random, 3=>previus, 4=>start, 5=>stop, 6/7=>vol up/down, 
        next/previous are relative to the current, so play the next track from whatever is playing
    L= 0=>allow another trigger to interrupt, 1=>other triggers will not interrupt till done playing
        stop & volume are always allowed
        disables "this" trigger
    Triggers happen on high(open)->low transition (not if held low?)
    Hold a trigger low: repeat play
    Multiple triggers low: pick next higher from here.
    Presumably, stop/vol are outside those rules?

Sound tracks are 001*.mp3, corresponding to trig #
